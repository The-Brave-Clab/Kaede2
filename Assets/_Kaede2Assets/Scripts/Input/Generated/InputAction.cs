//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Kaede2Assets/Settings/Kaede2InputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Kaede2.Input
{
    public partial class @Kaede2InputAction: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @Kaede2InputAction()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""Kaede2InputAction"",
    ""maps"": [
        {
            ""name"": ""SplashScreen"",
            ""id"": ""1de600b5-a478-4cc1-a322-18bbf8567dcf"",
            ""actions"": [
                {
                    ""name"": ""Skip"",
                    ""type"": ""Button"",
                    ""id"": ""718943ec-b1d4-4a48-b7fa-1e8c10de4a3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8b6a520f-94f7-4b4c-8dbf-ee656f4503c3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c57c660a-b058-4334-ae00-fa9e0f7a75fb"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c5e4d49-627b-47c4-9362-90997c45be02"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c108c735-ee52-4e39-b60d-405f474ec37d"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c03b4387-6f1d-4a10-b0fe-fa9aa04340b5"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b9fd41f-7839-453a-87ea-fd70f800f4f0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac6bdfd6-f2b8-4913-a850-5823fdbf1733"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd839d0c-e175-45ae-a118-b83351f4e001"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61b316ad-85b9-4691-8969-11be28378e6d"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16a96338-0e7e-40a6-bd27-77e869ce5850"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e720fd2-7e7e-41ae-8509-79ffdb296b44"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52511214-a476-4906-8c0d-60ec09836cd5"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touchscreen"",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GeneralUI"",
            ""id"": ""757a061a-a9db-49e7-812b-cac383ea2dda"",
            ""actions"": [
                {
                    ""name"": ""NavigateUp"",
                    ""type"": ""Button"",
                    ""id"": ""d574be61-cd29-4927-a1b8-ca7c438d25de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateDown"",
                    ""type"": ""Button"",
                    ""id"": ""4c3ef1e5-a3ee-45c6-808d-b037f9ec8290"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateLeft"",
                    ""type"": ""Button"",
                    ""id"": ""60b7943a-988f-42f2-9582-ebcf45af1fd7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NavigateRight"",
                    ""type"": ""Button"",
                    ""id"": ""292f15fd-ff06-4200-af03-53a1c8ae8702"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""e296a17c-41a0-4c7a-abe3-a806e3967cd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""49bcbecc-967b-47b6-a187-5c6a57fc11f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4df8162f-88c4-4f30-9dc5-410e516d771f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NavigateUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af590ee5-7cd0-43f0-bd82-4d15054b3ed5"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""NavigateUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94d97ab8-9d13-44b2-bf24-4f80613cfc34"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""NavigateUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e86d4344-6ff1-4a98-948b-68e3f7fe2aa2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NavigateDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43cdbcb4-107f-4eb9-90e2-490b9d2938d9"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""NavigateDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d735edd-9936-41e8-8f65-cfe4ad1fa40b"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""NavigateDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3851b3f8-678c-4a2d-b169-164db1f69d7b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d35d3f0e-158c-46f4-974a-7463304e6fde"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""NavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab23764c-376d-451a-86b9-3b498d26d087"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""NavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e41ec8d-85ff-456a-a581-96825567f8bb"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""NavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbd9b852-9de4-4f61-af7d-1c9f7660ea59"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""NavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80f805b7-207e-4491-b95c-0917697b0cb4"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""NavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f64bcc8-6b5b-43f7-95a9-ef86201a7634"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1164e79c-d01a-4dd4-9436-72854abcd404"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ef27a72-2320-4ed2-b5a5-c4840f772cd3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e533ef1d-4c1f-4d42-8c56-10106668f4ec"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84169045-b94c-42a8-9963-62bd25930a5c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadNintendoStyle"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""433ad2c7-07a1-4179-8780-cf8a90c03376"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04ab9c4d-e98c-4245-bb4c-26721b8cd467"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de4dfc06-b86a-4a4f-9f86-13e488955770"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadNintendoStyle"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Scenario"",
            ""id"": ""97c77478-dddc-4d96-981e-5926d9799a3f"",
            ""actions"": [
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""0e842126-4503-4397-a766-fe072ba4cd04"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleAuto"",
                    ""type"": ""Button"",
                    ""id"": ""4294494b-e0ff-4ff1-8494-aafdd4835aea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleContinuous"",
                    ""type"": ""Button"",
                    ""id"": ""8839deb5-196f-463b-a05c-ffa10029c161"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartFromBeginning"",
                    ""type"": ""Button"",
                    ""id"": ""fdecf8d9-5944-46f0-a6f3-a4493991540c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PreviousScenario"",
                    ""type"": ""Button"",
                    ""id"": ""cb467707-c83a-4ecd-b45c-e2d63959b063"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextScenario"",
                    ""type"": ""Button"",
                    ""id"": ""e11fda68-9551-4709-a102-d8924427fbb9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowLog"",
                    ""type"": ""Button"",
                    ""id"": ""4331725c-f41a-4fa4-bcce-40b585055668"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleUI"",
                    ""type"": ""Button"",
                    ""id"": ""9c21e7f0-4398-4d71-b0ff-06eed6a3efe8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""5edf1ce8-4f42-4e6b-9da0-51470cbb42ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowMapping"",
                    ""type"": ""Button"",
                    ""id"": ""4d5660ea-25e8-4347-a0c6-d5a0a7d941d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GoBack"",
                    ""type"": ""Button"",
                    ""id"": ""845095f7-56d0-4fea-88db-171743d5bffe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6206d671-2620-460b-bf49-fca159558a04"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55386fe2-0a16-46f7-aa18-f446475a2de1"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""689ee63e-2e79-405a-9755-8456dfd9ebd7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Touchscreen"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84e3146c-a7e6-458d-959b-dbaf62ddf66b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadNintendoStyle"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d59f069-5c7b-472c-a012-f9e40e3717f1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b31ce39d-62c8-4473-b5b1-c133e859a97f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleAuto"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbf611f3-7d8c-4ec7-a937-3f0b172a1311"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleContinuous"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37db1acf-81ba-4576-b42f-645fd6b35138"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartFromBeginning"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2ad7da8-5e0a-4619-8f97-cdf0d8e1e261"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousScenario"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf8f26bf-7081-491c-9b08-a6c34e6c5da1"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextScenario"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea66b695-18ea-42e9-95b0-f8238db72e9d"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""ShowLog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cef400c-f36b-44fd-9120-d06fe21786b9"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ShowLog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03a5810c-6c33-4c84-9bae-28977795f5d0"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad;GamepadNintendoStyle"",
                    ""action"": ""ToggleUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3d1f430-3996-4b65-a163-9bc21506a271"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ToggleUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc9ab2f7-4c0b-4fd1-9670-2816f3716d13"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b3cc0f1-97d1-4757-be0d-8622c722cc44"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowMapping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba8f32b4-cd28-4db2-b310-6133bf4281a0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ScenarioLog"",
            ""id"": ""fd223dde-1e52-4917-8b1e-b7bebafed869"",
            ""actions"": [
                {
                    ""name"": ""GoBack"",
                    ""type"": ""Button"",
                    ""id"": ""11985fc7-9072-4239-83ed-530a225735c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""23b310ee-7ae0-444b-b4af-036d7a4a36b3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GamepadNintendoStyle"",
                    ""action"": ""GoBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ff5713f-cc59-4b65-af9e-71ebe7149df4"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GoBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73566763-63c3-4436-9270-6c1953af1146"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""GoBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": []
        },
        {
            ""name"": ""GamepadNintendoStyle"",
            ""bindingGroup"": ""GamepadNintendoStyle"",
            ""devices"": []
        },
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": []
        },
        {
            ""name"": ""Touchscreen"",
            ""bindingGroup"": ""Touchscreen"",
            ""devices"": []
        }
    ]
}");
            // SplashScreen
            m_SplashScreen = asset.FindActionMap("SplashScreen", throwIfNotFound: true);
            m_SplashScreen_Skip = m_SplashScreen.FindAction("Skip", throwIfNotFound: true);
            // GeneralUI
            m_GeneralUI = asset.FindActionMap("GeneralUI", throwIfNotFound: true);
            m_GeneralUI_NavigateUp = m_GeneralUI.FindAction("NavigateUp", throwIfNotFound: true);
            m_GeneralUI_NavigateDown = m_GeneralUI.FindAction("NavigateDown", throwIfNotFound: true);
            m_GeneralUI_NavigateLeft = m_GeneralUI.FindAction("NavigateLeft", throwIfNotFound: true);
            m_GeneralUI_NavigateRight = m_GeneralUI.FindAction("NavigateRight", throwIfNotFound: true);
            m_GeneralUI_Confirm = m_GeneralUI.FindAction("Confirm", throwIfNotFound: true);
            m_GeneralUI_Cancel = m_GeneralUI.FindAction("Cancel", throwIfNotFound: true);
            // Scenario
            m_Scenario = asset.FindActionMap("Scenario", throwIfNotFound: true);
            m_Scenario_Next = m_Scenario.FindAction("Next", throwIfNotFound: true);
            m_Scenario_ToggleAuto = m_Scenario.FindAction("ToggleAuto", throwIfNotFound: true);
            m_Scenario_ToggleContinuous = m_Scenario.FindAction("ToggleContinuous", throwIfNotFound: true);
            m_Scenario_StartFromBeginning = m_Scenario.FindAction("StartFromBeginning", throwIfNotFound: true);
            m_Scenario_PreviousScenario = m_Scenario.FindAction("PreviousScenario", throwIfNotFound: true);
            m_Scenario_NextScenario = m_Scenario.FindAction("NextScenario", throwIfNotFound: true);
            m_Scenario_ShowLog = m_Scenario.FindAction("ShowLog", throwIfNotFound: true);
            m_Scenario_ToggleUI = m_Scenario.FindAction("ToggleUI", throwIfNotFound: true);
            m_Scenario_Menu = m_Scenario.FindAction("Menu", throwIfNotFound: true);
            m_Scenario_ShowMapping = m_Scenario.FindAction("ShowMapping", throwIfNotFound: true);
            m_Scenario_GoBack = m_Scenario.FindAction("GoBack", throwIfNotFound: true);
            // ScenarioLog
            m_ScenarioLog = asset.FindActionMap("ScenarioLog", throwIfNotFound: true);
            m_ScenarioLog_GoBack = m_ScenarioLog.FindAction("GoBack", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // SplashScreen
        private readonly InputActionMap m_SplashScreen;
        private List<ISplashScreenActions> m_SplashScreenActionsCallbackInterfaces = new List<ISplashScreenActions>();
        private readonly InputAction m_SplashScreen_Skip;
        public struct SplashScreenActions
        {
            private @Kaede2InputAction m_Wrapper;
            public SplashScreenActions(@Kaede2InputAction wrapper) { m_Wrapper = wrapper; }
            public InputAction @Skip => m_Wrapper.m_SplashScreen_Skip;
            public InputActionMap Get() { return m_Wrapper.m_SplashScreen; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(SplashScreenActions set) { return set.Get(); }
            public void AddCallbacks(ISplashScreenActions instance)
            {
                if (instance == null || m_Wrapper.m_SplashScreenActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_SplashScreenActionsCallbackInterfaces.Add(instance);
                @Skip.started += instance.OnSkip;
                @Skip.performed += instance.OnSkip;
                @Skip.canceled += instance.OnSkip;
            }

            private void UnregisterCallbacks(ISplashScreenActions instance)
            {
                @Skip.started -= instance.OnSkip;
                @Skip.performed -= instance.OnSkip;
                @Skip.canceled -= instance.OnSkip;
            }

            public void RemoveCallbacks(ISplashScreenActions instance)
            {
                if (m_Wrapper.m_SplashScreenActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ISplashScreenActions instance)
            {
                foreach (var item in m_Wrapper.m_SplashScreenActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_SplashScreenActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public SplashScreenActions @SplashScreen => new SplashScreenActions(this);

        // GeneralUI
        private readonly InputActionMap m_GeneralUI;
        private List<IGeneralUIActions> m_GeneralUIActionsCallbackInterfaces = new List<IGeneralUIActions>();
        private readonly InputAction m_GeneralUI_NavigateUp;
        private readonly InputAction m_GeneralUI_NavigateDown;
        private readonly InputAction m_GeneralUI_NavigateLeft;
        private readonly InputAction m_GeneralUI_NavigateRight;
        private readonly InputAction m_GeneralUI_Confirm;
        private readonly InputAction m_GeneralUI_Cancel;
        public struct GeneralUIActions
        {
            private @Kaede2InputAction m_Wrapper;
            public GeneralUIActions(@Kaede2InputAction wrapper) { m_Wrapper = wrapper; }
            public InputAction @NavigateUp => m_Wrapper.m_GeneralUI_NavigateUp;
            public InputAction @NavigateDown => m_Wrapper.m_GeneralUI_NavigateDown;
            public InputAction @NavigateLeft => m_Wrapper.m_GeneralUI_NavigateLeft;
            public InputAction @NavigateRight => m_Wrapper.m_GeneralUI_NavigateRight;
            public InputAction @Confirm => m_Wrapper.m_GeneralUI_Confirm;
            public InputAction @Cancel => m_Wrapper.m_GeneralUI_Cancel;
            public InputActionMap Get() { return m_Wrapper.m_GeneralUI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(GeneralUIActions set) { return set.Get(); }
            public void AddCallbacks(IGeneralUIActions instance)
            {
                if (instance == null || m_Wrapper.m_GeneralUIActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_GeneralUIActionsCallbackInterfaces.Add(instance);
                @NavigateUp.started += instance.OnNavigateUp;
                @NavigateUp.performed += instance.OnNavigateUp;
                @NavigateUp.canceled += instance.OnNavigateUp;
                @NavigateDown.started += instance.OnNavigateDown;
                @NavigateDown.performed += instance.OnNavigateDown;
                @NavigateDown.canceled += instance.OnNavigateDown;
                @NavigateLeft.started += instance.OnNavigateLeft;
                @NavigateLeft.performed += instance.OnNavigateLeft;
                @NavigateLeft.canceled += instance.OnNavigateLeft;
                @NavigateRight.started += instance.OnNavigateRight;
                @NavigateRight.performed += instance.OnNavigateRight;
                @NavigateRight.canceled += instance.OnNavigateRight;
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
            }

            private void UnregisterCallbacks(IGeneralUIActions instance)
            {
                @NavigateUp.started -= instance.OnNavigateUp;
                @NavigateUp.performed -= instance.OnNavigateUp;
                @NavigateUp.canceled -= instance.OnNavigateUp;
                @NavigateDown.started -= instance.OnNavigateDown;
                @NavigateDown.performed -= instance.OnNavigateDown;
                @NavigateDown.canceled -= instance.OnNavigateDown;
                @NavigateLeft.started -= instance.OnNavigateLeft;
                @NavigateLeft.performed -= instance.OnNavigateLeft;
                @NavigateLeft.canceled -= instance.OnNavigateLeft;
                @NavigateRight.started -= instance.OnNavigateRight;
                @NavigateRight.performed -= instance.OnNavigateRight;
                @NavigateRight.canceled -= instance.OnNavigateRight;
                @Confirm.started -= instance.OnConfirm;
                @Confirm.performed -= instance.OnConfirm;
                @Confirm.canceled -= instance.OnConfirm;
                @Cancel.started -= instance.OnCancel;
                @Cancel.performed -= instance.OnCancel;
                @Cancel.canceled -= instance.OnCancel;
            }

            public void RemoveCallbacks(IGeneralUIActions instance)
            {
                if (m_Wrapper.m_GeneralUIActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IGeneralUIActions instance)
            {
                foreach (var item in m_Wrapper.m_GeneralUIActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_GeneralUIActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public GeneralUIActions @GeneralUI => new GeneralUIActions(this);

        // Scenario
        private readonly InputActionMap m_Scenario;
        private List<IScenarioActions> m_ScenarioActionsCallbackInterfaces = new List<IScenarioActions>();
        private readonly InputAction m_Scenario_Next;
        private readonly InputAction m_Scenario_ToggleAuto;
        private readonly InputAction m_Scenario_ToggleContinuous;
        private readonly InputAction m_Scenario_StartFromBeginning;
        private readonly InputAction m_Scenario_PreviousScenario;
        private readonly InputAction m_Scenario_NextScenario;
        private readonly InputAction m_Scenario_ShowLog;
        private readonly InputAction m_Scenario_ToggleUI;
        private readonly InputAction m_Scenario_Menu;
        private readonly InputAction m_Scenario_ShowMapping;
        private readonly InputAction m_Scenario_GoBack;
        public struct ScenarioActions
        {
            private @Kaede2InputAction m_Wrapper;
            public ScenarioActions(@Kaede2InputAction wrapper) { m_Wrapper = wrapper; }
            public InputAction @Next => m_Wrapper.m_Scenario_Next;
            public InputAction @ToggleAuto => m_Wrapper.m_Scenario_ToggleAuto;
            public InputAction @ToggleContinuous => m_Wrapper.m_Scenario_ToggleContinuous;
            public InputAction @StartFromBeginning => m_Wrapper.m_Scenario_StartFromBeginning;
            public InputAction @PreviousScenario => m_Wrapper.m_Scenario_PreviousScenario;
            public InputAction @NextScenario => m_Wrapper.m_Scenario_NextScenario;
            public InputAction @ShowLog => m_Wrapper.m_Scenario_ShowLog;
            public InputAction @ToggleUI => m_Wrapper.m_Scenario_ToggleUI;
            public InputAction @Menu => m_Wrapper.m_Scenario_Menu;
            public InputAction @ShowMapping => m_Wrapper.m_Scenario_ShowMapping;
            public InputAction @GoBack => m_Wrapper.m_Scenario_GoBack;
            public InputActionMap Get() { return m_Wrapper.m_Scenario; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ScenarioActions set) { return set.Get(); }
            public void AddCallbacks(IScenarioActions instance)
            {
                if (instance == null || m_Wrapper.m_ScenarioActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ScenarioActionsCallbackInterfaces.Add(instance);
                @Next.started += instance.OnNext;
                @Next.performed += instance.OnNext;
                @Next.canceled += instance.OnNext;
                @ToggleAuto.started += instance.OnToggleAuto;
                @ToggleAuto.performed += instance.OnToggleAuto;
                @ToggleAuto.canceled += instance.OnToggleAuto;
                @ToggleContinuous.started += instance.OnToggleContinuous;
                @ToggleContinuous.performed += instance.OnToggleContinuous;
                @ToggleContinuous.canceled += instance.OnToggleContinuous;
                @StartFromBeginning.started += instance.OnStartFromBeginning;
                @StartFromBeginning.performed += instance.OnStartFromBeginning;
                @StartFromBeginning.canceled += instance.OnStartFromBeginning;
                @PreviousScenario.started += instance.OnPreviousScenario;
                @PreviousScenario.performed += instance.OnPreviousScenario;
                @PreviousScenario.canceled += instance.OnPreviousScenario;
                @NextScenario.started += instance.OnNextScenario;
                @NextScenario.performed += instance.OnNextScenario;
                @NextScenario.canceled += instance.OnNextScenario;
                @ShowLog.started += instance.OnShowLog;
                @ShowLog.performed += instance.OnShowLog;
                @ShowLog.canceled += instance.OnShowLog;
                @ToggleUI.started += instance.OnToggleUI;
                @ToggleUI.performed += instance.OnToggleUI;
                @ToggleUI.canceled += instance.OnToggleUI;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
                @ShowMapping.started += instance.OnShowMapping;
                @ShowMapping.performed += instance.OnShowMapping;
                @ShowMapping.canceled += instance.OnShowMapping;
                @GoBack.started += instance.OnGoBack;
                @GoBack.performed += instance.OnGoBack;
                @GoBack.canceled += instance.OnGoBack;
            }

            private void UnregisterCallbacks(IScenarioActions instance)
            {
                @Next.started -= instance.OnNext;
                @Next.performed -= instance.OnNext;
                @Next.canceled -= instance.OnNext;
                @ToggleAuto.started -= instance.OnToggleAuto;
                @ToggleAuto.performed -= instance.OnToggleAuto;
                @ToggleAuto.canceled -= instance.OnToggleAuto;
                @ToggleContinuous.started -= instance.OnToggleContinuous;
                @ToggleContinuous.performed -= instance.OnToggleContinuous;
                @ToggleContinuous.canceled -= instance.OnToggleContinuous;
                @StartFromBeginning.started -= instance.OnStartFromBeginning;
                @StartFromBeginning.performed -= instance.OnStartFromBeginning;
                @StartFromBeginning.canceled -= instance.OnStartFromBeginning;
                @PreviousScenario.started -= instance.OnPreviousScenario;
                @PreviousScenario.performed -= instance.OnPreviousScenario;
                @PreviousScenario.canceled -= instance.OnPreviousScenario;
                @NextScenario.started -= instance.OnNextScenario;
                @NextScenario.performed -= instance.OnNextScenario;
                @NextScenario.canceled -= instance.OnNextScenario;
                @ShowLog.started -= instance.OnShowLog;
                @ShowLog.performed -= instance.OnShowLog;
                @ShowLog.canceled -= instance.OnShowLog;
                @ToggleUI.started -= instance.OnToggleUI;
                @ToggleUI.performed -= instance.OnToggleUI;
                @ToggleUI.canceled -= instance.OnToggleUI;
                @Menu.started -= instance.OnMenu;
                @Menu.performed -= instance.OnMenu;
                @Menu.canceled -= instance.OnMenu;
                @ShowMapping.started -= instance.OnShowMapping;
                @ShowMapping.performed -= instance.OnShowMapping;
                @ShowMapping.canceled -= instance.OnShowMapping;
                @GoBack.started -= instance.OnGoBack;
                @GoBack.performed -= instance.OnGoBack;
                @GoBack.canceled -= instance.OnGoBack;
            }

            public void RemoveCallbacks(IScenarioActions instance)
            {
                if (m_Wrapper.m_ScenarioActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IScenarioActions instance)
            {
                foreach (var item in m_Wrapper.m_ScenarioActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ScenarioActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ScenarioActions @Scenario => new ScenarioActions(this);

        // ScenarioLog
        private readonly InputActionMap m_ScenarioLog;
        private List<IScenarioLogActions> m_ScenarioLogActionsCallbackInterfaces = new List<IScenarioLogActions>();
        private readonly InputAction m_ScenarioLog_GoBack;
        public struct ScenarioLogActions
        {
            private @Kaede2InputAction m_Wrapper;
            public ScenarioLogActions(@Kaede2InputAction wrapper) { m_Wrapper = wrapper; }
            public InputAction @GoBack => m_Wrapper.m_ScenarioLog_GoBack;
            public InputActionMap Get() { return m_Wrapper.m_ScenarioLog; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(ScenarioLogActions set) { return set.Get(); }
            public void AddCallbacks(IScenarioLogActions instance)
            {
                if (instance == null || m_Wrapper.m_ScenarioLogActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_ScenarioLogActionsCallbackInterfaces.Add(instance);
                @GoBack.started += instance.OnGoBack;
                @GoBack.performed += instance.OnGoBack;
                @GoBack.canceled += instance.OnGoBack;
            }

            private void UnregisterCallbacks(IScenarioLogActions instance)
            {
                @GoBack.started -= instance.OnGoBack;
                @GoBack.performed -= instance.OnGoBack;
                @GoBack.canceled -= instance.OnGoBack;
            }

            public void RemoveCallbacks(IScenarioLogActions instance)
            {
                if (m_Wrapper.m_ScenarioLogActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IScenarioLogActions instance)
            {
                foreach (var item in m_Wrapper.m_ScenarioLogActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_ScenarioLogActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public ScenarioLogActions @ScenarioLog => new ScenarioLogActions(this);
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        private int m_GamepadNintendoStyleSchemeIndex = -1;
        public InputControlScheme GamepadNintendoStyleScheme
        {
            get
            {
                if (m_GamepadNintendoStyleSchemeIndex == -1) m_GamepadNintendoStyleSchemeIndex = asset.FindControlSchemeIndex("GamepadNintendoStyle");
                return asset.controlSchemes[m_GamepadNintendoStyleSchemeIndex];
            }
        }
        private int m_KeyboardMouseSchemeIndex = -1;
        public InputControlScheme KeyboardMouseScheme
        {
            get
            {
                if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
                return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
            }
        }
        private int m_TouchscreenSchemeIndex = -1;
        public InputControlScheme TouchscreenScheme
        {
            get
            {
                if (m_TouchscreenSchemeIndex == -1) m_TouchscreenSchemeIndex = asset.FindControlSchemeIndex("Touchscreen");
                return asset.controlSchemes[m_TouchscreenSchemeIndex];
            }
        }
        public interface ISplashScreenActions
        {
            void OnSkip(InputAction.CallbackContext context);
        }
        public interface IGeneralUIActions
        {
            void OnNavigateUp(InputAction.CallbackContext context);
            void OnNavigateDown(InputAction.CallbackContext context);
            void OnNavigateLeft(InputAction.CallbackContext context);
            void OnNavigateRight(InputAction.CallbackContext context);
            void OnConfirm(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
        }
        public interface IScenarioActions
        {
            void OnNext(InputAction.CallbackContext context);
            void OnToggleAuto(InputAction.CallbackContext context);
            void OnToggleContinuous(InputAction.CallbackContext context);
            void OnStartFromBeginning(InputAction.CallbackContext context);
            void OnPreviousScenario(InputAction.CallbackContext context);
            void OnNextScenario(InputAction.CallbackContext context);
            void OnShowLog(InputAction.CallbackContext context);
            void OnToggleUI(InputAction.CallbackContext context);
            void OnMenu(InputAction.CallbackContext context);
            void OnShowMapping(InputAction.CallbackContext context);
            void OnGoBack(InputAction.CallbackContext context);
        }
        public interface IScenarioLogActions
        {
            void OnGoBack(InputAction.CallbackContext context);
        }
    }
}
